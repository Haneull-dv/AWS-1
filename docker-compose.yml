version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: hc_postgres_alt
    restart: always
    environment:
      POSTGRES_USER: hc_user
      POSTGRES_PASSWORD: hc_password
      POSTGRES_DB: hc_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network

  gateway:
    build:
      context: ./gateway_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./gateway_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  dsdgen:
    build:
      context: ./dsdgen_service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    env_file:
      - ./dsdgen_service/.env
    depends_on:
      - postgres
    volumes:
      - ./dart_documents:/app/app/dart_documents
    networks:
      - app-network

  dsdcheck:
    build:
      context: ./dsdcheck_service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    volumes:
      - ./dsdcheck_service/app/resources:/app/app/resources
    env_file:
      - ./dsdcheck_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - gateway

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
